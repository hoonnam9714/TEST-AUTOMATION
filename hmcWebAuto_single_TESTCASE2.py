# Generated by CHAE KYUNG HOON
import time
import datetime
import sys
import pyautogui
import pyperclip
import smtplib
import os
from account import *
from xpath import *
from email.message import EmailMessage
from PIL.ImageOps import grayscale
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import WebDriverWait          #웹페이지 로딩 대기
from selenium.webdriver.support import expected_conditions as EC 
from selenium.common.exceptions import NoSuchElementException
from selenium.common.exceptions import ElementClickInterceptedException
from datetime import date
from pytimekr import pytimekr
from selenium.common.exceptions import JavascriptException

###########################################
# 주말체크
###########################################
def is_weekend(d):
    return d.weekday() > 4

###########################################
# 공휴일체크
###########################################
def is_holidays(d):
    if d == str(pytimekr.hangul()).replace("-","") or d == str(pytimekr.chuseok()).replace("-","") or d == str(pytimekr.lunar_newyear()).replace("-","") or d == str(pytimekr.children()).replace("-","") or d == str(pytimekr.independence()).replace("-","") or d == str(pytimekr.memorial()).replace("-","") or d == str(pytimekr.buddha()).replace("-","") or d == str(pytimekr.samiljeol()).replace("-","") or d == str(pytimekr.constitution()).replace("-",""):
        return True
    else:
        return False


###########################################
# 메인 프로그램 시작
###########################################
count = 0 #실패카운트
while True:
    try:
        if count > 100:
            print("### count : " + str(count))
            break

        current_datetime = datetime.datetime.now()
        dateformat = "%Y%m%d%H%M%S"
        currentTime = current_datetime.strftime(dateformat) #현재시간 ex)20211103153201
        print("년도: "+currentTime[0:4])  #현재시간 분 ex) 10
        print("월  : "+currentTime[4:6])  #현재시간 분 ex) 10
        print("일자: "+currentTime[6:8])  #현재시간 분 ex) 10
        print("분  : "+currentTime[10:12])  #현재시간 분 ex) 10
        print("분(뒷 1자리)  :" + currentTime[11:12])  #현재시간 분 2자리 중 뒷자리 ex) 0
        
        print("휴일여부 : "+str(is_weekend(date(int('2021'),int('11'),int('03')))))
        print("공휴일여부 : "+str(is_holidays(currentTime[0:8])))
        
        
        if (int('90000') < int(currentTime[8:14]) or int('90000') > int(currentTime[8:14])): #16시 이후거나 08시 이전이면 실행
        # if (int('120000') < int(currentTime[8:14]) or int('90000') > int(currentTime[8:14])) and int(currentTime[11:14]) == int('500'): #16시 이후거나 08시 이전이면 10분 단위로 실행
        # if is_weekend(date(int(currentTime[0:4]),int(currentTime[4:6]),int(currentTime[6:8]))) and int(currentTime[11:12]) == int('0'): #토/일요일이면 10분 단위로 실행
        # if  is_holidays(currentTime[0:8]) and int(currentTime[11:12]) == int('0'): #공휴일이면 10분 단위로 실행
            options = webdriver.ChromeOptions()
            options.add_experimental_option("excludeSwitches", ["enable-logging"])
            browser = webdriver.Chrome(options=options)
                
            hmc_url = "https://stg.hanwhasfa.com/co/loginTest" #HMC QA 테스트 URL
            browser.get(hmc_url) #HMC QA 테스트 URL
            browser.maximize_window()
            browser.implicitly_wait(10)

            browser.find_element_by_xpath("//*[@id='sabun01']").send_keys("2140046")
            browser.find_element_by_xpath("//*[@id='passw01']").send_keys("01")
            browser.find_element_by_xpath("//*[@id='name01']").send_keys("01")
            browser.find_element_by_xpath("//*[@id='sfaCmpnDvsn']").send_keys("01")
            browser.find_element_by_xpath("//*[@id='mobUserDvsn']").send_keys("01")
            browser.find_element_by_xpath("//*[@id='passw01']").click()
            browser.find_element_by_xpath("//*[@id='btn-login']").click()
            time.sleep(1)

            pyautogui.press('enter') #엔터키(팝업처리)
            time.sleep(1)

            hmc_url = "https://stg.hanwhasfa.com/at/cnvnplan/test" #HMC QA 테스트 URL
            browser.get(hmc_url) #HMC QA 테스트 URL
            browser.maximize_window()
            browser.implicitly_wait(10)


            browser.find_element_by_xpath("//*[@id='hmcUrl']").clear()
            browser.find_element_by_xpath("//*[@id='hmcUrl']").send_keys("https://hmc.hanwhalife.com:1080")
            browser.find_element_by_xpath("//*[@id='wrapper']/div/div/div[2]/section/div[1]/div[11]/div/div[1]/label").click()
            browser.find_element_by_xpath("//*[@id='btn_openCallback']").click()
            time.sleep(1)

            pyautogui.press('enter') #엔터키(팝업처리)
            time.sleep(1)

            pyautogui.press('enter') #엔터키(팝업처리)
            time.sleep(1)
            browser.implicitly_wait(10)
            time.sleep(2) 

            browser.switch_to_window(browser.window_handles[1]) #탭 전환
            time.sleep(1)
            hmc_url = browser.current_url
            time.sleep(0.5) 
            browser.switch_to_window(browser.window_handles[0]) #탭 전환
            time.sleep(0.5) 

            browser.get(hmc_url) #HMC QA 테스트 URL
            browser.maximize_window()
            browser.implicitly_wait(10)
            
            time.sleep(0.5)
            browser.find_element(By.CSS_SELECTOR, ".search > input").send_keys("채경훈") #엑셀에서 가져온 고객명 맵핑
            browser.find_element(By.CSS_SELECTOR, ".search > input").send_keys(Keys.ENTER)                    #고객명 엔터
            time.sleep(0.5)

            browser.find_element_by_xpath(hmc_xpath1).click()      #신규설계 버튼
            browser.implicitly_wait(10)
            time.sleep(2)

            elem = browser.find_element_by_xpath("//*[@id="+"1816057"+"]")
            browser.execute_script("arguments[0].click();", elem)

            browser.find_element_by_xpath(hmc_xpath3).click()        #다음 버튼    
            browser.implicitly_wait(10)
            time.sleep(2)

            browser.find_element_by_xpath("//*[@id='container']/div[1]/section/div[2]/div[2]/div[2]/div[1]/div/input").send_keys("300000")
            time.sleep(0.5)

            browser.implicitly_wait(10)
            WebDriverWait(browser, 30).until(EC.presence_of_element_located((By.XPATH, hmc_xpath6)))
            browser.find_element_by_xpath(hmc_xpath6).click()       #상세결과보기
            time.sleep(5)

            browser.implicitly_wait(10)
            try:
                elem = WebDriverWait(browser, 30).until(EC.presence_of_element_located((By.XPATH, hmc_xpath7))) #계약자명으로 엘리먼트 로딩 확인
            except:
                pass
            try:
                elem = WebDriverWait(browser, 30).until(EC.presence_of_element_located((By.XPATH, hmc_xpath8))) #설계저장으로 엘리먼트 로딩 확인
                elem.click() #설계저장 클릭
            except:
                pass
            browser.implicitly_wait(10)

            WebDriverWait(browser, 30).until(EC.presence_of_element_located((By.XPATH, hmc_xpath9)))
            time.sleep(1)
            browser.find_element_by_xpath(hmc_xpath9).click()       #상품설명서 미리보기
            time.sleep(15)
            
            pyautogui.moveTo(474,703) #지정한 위치로 마우스를 이동
            pyautogui.click()
            pyautogui.hotkey("ctrl","s") #PDF 최초 저장
            time.sleep(0.5)
            
            browser.quit() #브라우저 종료
            time.sleep(0.5)

            path = "C:/Users/Administrator/Downloads/"
            file = "document.pdf"

            # time.sleep(10)
            if os.path.isfile(path+file):
                # os.remove(path+file) #파일 완전 삭제
                os.rename(path+file,path+"document"+"_"+currentTime+".pdf")
                print("상품설명서 pdf 이름 변경")
                # print("상품설명서 pdf 삭제")
            else:
                print("상품설명서 pdf파일 없음")
                count = count + 1
                pyautogui.moveTo(1544,654) #카카오톡 메시지 박스
                time.sleep(0.5)
                pyautogui.click()
                time.sleep(0.5)
                pyperclip.copy("HMC 가입설계 실패_"+str(currentTime)) #클립보드에 복사
                pyautogui.hotkey("ctrl","v") #붙여넣기
                time.sleep(0.5)
                pyautogui.moveTo(1880,650) #카카오톡 전송
                time.sleep(0.5)
                pyautogui.click()
    except :
        print("예외발생")
        count = count + 1
        browser.quit() #브라우저 종료
        time.sleep(0.5)
        # pyautogui.moveTo(1544,654) #카카오톡 메시지 박스 //1920 우측위
        pyautogui.moveTo(33,644) #카카오톡 메시지 박스 //1280 좌측위
        time.sleep(0.5)
        pyautogui.click()
        time.sleep(0.5)
        pyperclip.copy("HMC 가입설계 실패_"+str(currentTime)) #클립보드에 복사
        pyautogui.hotkey("ctrl","v") #붙여넣기
        time.sleep(0.5)
        # pyautogui.moveTo(1880,650) #카카오톡 전송 //1920 우측위
        pyautogui.moveTo(393,644) #카카오톡 전송 //1280 좌측위
        time.sleep(0.5)
        pyautogui.click()
        time.sleep(0.5)
        pass
    # break




